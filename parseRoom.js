import fs from "fs";
import ExcelJS from "exceljs";
import { rooms } from "./room.js";

// Text v√≠ d
function extractRoomInfo(text) {
  const ma = text.match(/M√£\s*:\s*(.*)/)?.[1]?.trim();
  const diaChi = text.match(/ƒê·ªãa ch·ªâ\s*:\s*(.*)/)?.[1]?.trim();
  const gia = text.match(/(?:GI√Å|Gi√°|gi√°|GI√°|Gi√Å)\s*:\s*(.*)/)?.[1]?.trim();
  const phong = text.match(/Ph√≤ng\s*:\s*(.*)/)?.[1]?.trim();
  const noiThat = text.match(/N·ªôi th·∫•t\s*:\s*(.*)/)?.[1]?.trim();
  const match = text.match(/‚è∞\s*(.+)/);
  const thoiGianTrong = match ? match[1].trim() : "";
  const luuY =
    (text.match(/(?:L∆ØU √ù|L∆∞u √Ω)\s*([\s\S]*)/) || [])[1]?.trim() || "";

  // D·ªãch v·ª• xu·ªëng d√≤ng khi g·∫∑p d·∫•u ph·∫©y
  let dichVu = text
    .match(/‚ù£D·ªãch v·ª•\s*:\s*([\s\S]*?)(?=\n\n|‚õî|$)/)?.[1]
    ?.trim();
  if (dichVu) {
    dichVu = dichVu.replace(/,\s*/g, "\n"); // xu·ªëng d√≤ng
  }

  return { ma, diaChi, gia, phong, noiThat, dichVu, thoiGianTrong, luuY };
}

async function saveToExcel(rooms, filePath) {
  const workbook = new ExcelJS.Workbook();
  const sheet = workbook.addWorksheet("Phong cho thue");

  // Header
  sheet.addRow([
    "M√£",
    "ƒê·ªãa ch·ªâ",
    "Gi√°",
    "Th·ªùi gian tr·ªëng",
    "Ph√≤ng",
    "N·ªôi th·∫•t",
    "D·ªãch v·ª•",
    "L∆∞u √ù",
  ]);

  // Data
  rooms.forEach((r) => {
    sheet.addRow([
      r.ma,
      r.diaChi,
      r.gia,
      r.thoiGianTrong,
      r.phong,
      r.noiThat,
      r.dichVu,
      r.luuY,
    ]);
  });

  // CƒÉn ch·ªânh √¥ d·ªãch v·ª• ƒë·ªÉ xu·ªëng d√≤ng
  sheet.getColumn(7).alignment = { wrapText: true };

  await workbook.xlsx.writeFile(filePath);
  console.log(`ƒê√£ l∆∞u file Excel: ${filePath}`);
}

// Gi·∫£ s·ª≠ b·∫°n c√≥ nhi·ªÅu tin nh·∫Øn, t√°ch theo üåπ
const allRooms = rooms
  .split(/(?=üåπ)/)
  .map((block) => extractRoomInfo(block))
  .filter((r) => r.ma); // b·ªè block r·ªóng

saveToExcel(allRooms, "phong.xlsx");
